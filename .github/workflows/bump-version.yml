# name: Bump Version and Create Tag
# on:
#   push:
#     branches:
#       - main

# jobs:
#   bump-version:
#     runs-on: ubuntu-latest

#     permissions:
#       contents: write

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name:  'Automated Version Bump'
#         uses:  'phips28/gh-action-bump-version@master'
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag-prefix:  'v'



name: Bump Version and Create Tag

on:
  push:
    branches:
      - main

jobs:
  bump-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      repository-projects: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current version
        id: get-version
        run: echo "version=$(node -p -e "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump-version
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
          echo "new-version=$(npm version patch)" >> $GITHUB_OUTPUT

      - name: Create branch
        run: git checkout -b release-${{ steps.bump-version.outputs.new-version }}

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: release-${{ steps.bump-version.outputs.new-version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create pull request
      #   id: create-pull-request
      #   uses: peter-evans/create-pull-request@v5
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     title: "Bump version to ${{ steps.bump-version.outputs.new-version }}"
      #     body: "This pull request bumps the version to ${{ steps.bump-version.outputs.new-version }}"
      #     branch: release-${{ steps.bump-version.outputs.new-version }}
      #     base: main
      #     delete-branch: true
      - name: Create Pull Request
        run: |
          prCreated="$(gh pr create \
            -B main \
            -H release-${{ steps.bump-version.outputs.new-version }} \
            --title 'Merge release-${{ steps.bump-version.outputs.new-version }} into main' \
            --body 'Created by Github action')"
          
          echo 'PR_CREATED='$prCreated >> $GITHUB_ENV
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Approve Pull Request
      #   uses: juliangruber/approve-pull-request-action@v2.0.0
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     number: ${{ steps.create-pull-request.outputs.pull-request-number }}
      # - name: Merge Pull Request
      #   uses: juliangruber/merge-pull-request-action@v1
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     number: ${{ steps.create-pull-request.outputs.pull-request-number }}
      #     method: squash
      #     repo: dedicio/eslint-config
      - name: Merge Pull Request
        run: |
          gh pr merge $PR_CREATED --admin --squash --auto --delete-branch
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
